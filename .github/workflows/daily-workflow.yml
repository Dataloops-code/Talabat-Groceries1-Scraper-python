name: Scrape Talabat Groceries - Single Area

trigger:
  - main

schedules:
  - cron: "0 1 */10 * *"
    displayName: "Every 10 days at 1:00 AM"
    branches:
      include:
        - main
    always: true

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: ScrapeArea
    timeoutInMinutes: 360
    variables:
      area_name: "الظهر"
      area_url: "https://www.talabat.com/kuwait/groceries/59/dhaher"
    steps:
      - checkout: self
        persistCredentials: true
        fetchDepth: 1
        displayName: 'Checkout repository'

      - script: |
          echo "Debug: Listing environment variables"
          env | sort
          echo "Debug: Pipeline variables"
          echo "##vso[task.logissue type=warning]Build.SourceBranch: $(Build.SourceBranch)"
          echo "##vso[task.logissue type=warning]Build.SourceVersion: $(Build.SourceVersion)"
          echo "##vso[task.logissue type=warning]System.JobName: $(System.JobName)"
          echo "##vso[task.logissue type=warning]area_name: $(area_name)"
          echo "##vso[task.logissue type=warning]area_url: $(area_url)"
          echo "Debug: Repository details"
          git remote -v
          git status
        displayName: 'Debug environment and repository'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.10'
          addToPath: true
        displayName: 'Set up Python 3.10'

      - script: |
          sudo apt-get update
          sudo apt-get install -y jq
        displayName: 'Install jq'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install Python dependencies'

      - script: |
          python -m playwright install chromium
        displayName: 'Install Playwright Browsers'

      - script: |
          sudo apt-get update
          sudo apt-get install -y libdbus-glib-1-2 libgtk-3-0 libgdk-pixbuf2.0-0 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libpcre3 libwoff1 libevent-2.1-7 libopus0 libsecret-1-0 libhyphen0 libgles2 libsoup2.4-1 libvpx-dev
        displayName: 'Install Playwright System Dependencies'

      - task: Cache@2
        inputs:
          key: '"talabat-groceries-progress-$(area_name)-$(Build.BuildId)"'
          restoreKeys: |
            talabat-groceries-progress-$(area_name)-
          path: |
            current_progress_$(area_name).json
            scraped_progress_$(area_name).json
            cookies_$(area_name).json
            output/$(area_name).json
            output/$(area_name)_detailed.xlsx
        displayName: 'Restore cached progress'

      - script: |
          if [ -f "current_progress_$(area_name).json" ]; then
            if jq -e '.completed_areas[] | select(. == "$(area_name)")' current_progress_$(area_name).json > /dev/null; then
              echo "##vso[task.setvariable variable=completed]true"
            else
              echo "##vso[task.setvariable variable=completed]false"
            fi
          else
            echo "##vso[task.setvariable variable=completed]false"
          fi
        displayName: 'Check if area is completed'

      - script: |
          python main.py --area-name "$(area_name)" --url "$(area_url)"
        condition: eq(variables.completed, 'false')
        displayName: 'Run Talabat Groceries Scraper'

      - script: |
          ls -la
          cat current_progress_$(area_name).json || echo "current_progress_$(area_name).json not found"
          cat scraped_progress_$(area_name).json || echo "scraped_progress_$(area_name).json not found"
          ls output/$(area_name)_detailed.xlsx || echo "$(area_name)_detailed.xlsx not found"
        displayName: 'Debug file presence'
        condition: always()

      - script: |
          git config --global user.name "Azure Pipelines"
          git config --global user.email "pipelines@azure.com"
          git add current_progress_$(area_name).json scraped_progress_$(area_name).json cookies_$(area_name).json output/*.json output/*.xlsx || true
          git commit -m "Update scraper progress for $(area_name) run $(Build.BuildId)" || echo "No changes to commit"
          for attempt in 1 2 3; do
            git pull --rebase && git push && break
            echo "Git push failed (attempt $attempt/3), retrying..."
            sleep $((attempt * 5))
          done || echo "Failed to push after 3 attempts"
        displayName: 'Commit progress updates'
        condition: always()

      - task: Cache@2
        inputs:
          key: '"talabat-groceries-progress-$(area_name)-$(Build.BuildId)"'
          path: |
            current_progress_$(area_name).json
            scraped_progress_$(area_name).json
            cookies_$(area_name).json
            output/$(area_name).json
            output/$(area_name)_detailed.xlsx
        displayName: 'Save progress to cache'
        condition: always()

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: |
            current_progress_$(area_name).json
            scraped_progress_$(area_name).json
            cookies_$(area_name).json
            output/$(area_name).json
            output/$(area_name)_detailed.xlsx
            scraper.log
          artifactName: 'talabat-groceries-progress-$(area_name)'
          publishLocation: 'Container'
        displayName: 'Upload progress artifacts'
        condition: always()

      - script: |
          rm -rf ~/.cache/ms-playwright
        displayName: 'Cleanup Playwright cache'
        condition: always()
